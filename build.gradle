task createTargetDir {
    new File('target').mkdirs()
    new File('target/css').mkdirs()
    new File('target/dist').mkdirs()
}

task buildHetzer(type: Exec) {
    executable = 'stack'
    args = ['build']
}

task installHetzer(dependsOn: [buildHetzer, createTargetDir], type: Exec) {
    executable = 'stack'
    args = ['install', '--local-bin-path', 'target']
}

task copyConfig(dependsOn: createTargetDir, type: Copy) {
    from 'config'
    into 'target'
    include 'hetzer_conf.json'
}

task copyCss(dependsOn: createTargetDir, type: Copy) {
    from 'frontend'
    into 'target/css'
    include '*.css'
}

task copyIndex(dependsOn: createTargetDir, type: Copy) {
    from 'frontend'
    into 'target'
    include 'index.html'
}

task npmInstall(type: Exec) {
    workingDir 'frontend'
    executable = 'npm'
    args = ['install']
}

task webpack(type: Exec) {
    workingDir 'frontend'
    executable = 'webpack'
}

task copyReact(dependsOn: npmInstall, type: Copy) {
    from 'frontend/node_modules/react/dist/react.js'
    into 'target/dist'
}

task copyReactDom(dependsOn: npmInstall, type: Copy) {
    from 'frontend/node_modules/react-dom/dist/react-dom.js'
    into 'target/dist'
}

task copyBootstrapCss(dependsOn: [npmInstall, createTargetDir], type: Copy) {
    from 'frontend/node_modules/bootstrap/dist/css'
    into 'target/css'
    include '*.css'
}

task copyBundle(dependsOn: [createTargetDir, webpack], type: Copy) {
    from 'frontend/dist'
    into 'target/dist'
}

task run(dependsOn: createTargetDir, type: Exec) {
    if (file('target/hetzer').exists()) {
        workingDir './target'
        commandLine 'hetzer'
    }
    else {
        println 'Executable file does not exist. Run build first.'
    }
}

task clean(type: Delete) {
    delete 'target'
}

task install
install.dependsOn copyCss,copyIndex,copyConfig,installHetzer,copyBootstrapCss, copyBundle, copyReact, copyReactDom

